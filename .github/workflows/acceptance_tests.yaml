name: Acceptance Tests

on:
  push:
    branches: [master]
    paths-ignore: ['*.md']
  pull_request:
    type: [opened, reopened, edited]
    paths-ignore: ['*.md']
  repository_dispatch:
    types: [acceptance_tests]


jobs:
  linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Install PDK and Bolt
        run: |
          curl -O http://apt.puppet.com/puppet-tools-release-focal.deb
          sudo dpkg -i puppet-tools-release-focal.deb
          sudo apt update
          sudo apt install -y pdk puppet-bolt

          pdk --version
          bolt --version
      - name: Install 1password CLI
        run: |
          curl -LO https://cache.agilebits.com/dist/1P/op/pkg/v1.12.3/op_linux_amd64_v1.12.3.zip
          unzip op_linux_amd64_v1.12.3.zip
          sudo install -m 0755 op /usr/local/bin

          op --version
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Provision test fixtures
        run: |
          pdk bundle exec rake spec_prep
      - name: Run acceptance tests
        env:
          OP_TEST_PASSWORD: '${{ secrets.OP_TEST_PASSWORD }}'
          OP_TEST_ACCOUNT: '${{ secrets.OP_TEST_ACCOUNT }}'
          OP_TEST_SECRET: '${{ secrets.OP_TEST_SECRET }}'
          OP_DEVICE: '${{ secrets.OP_DEVICE_UUID }}'
        working-directory: spec/fixtures
        run: |
          eval $(printf '%s' "${OP_TEST_PASSWORD}" |op signin my.1password.com "${OP_TEST_ACCOUNT}" "${OP_TEST_SECRET}")

          bolt plan run op_data_test::test_password
          bolt plan run op_data_test::test_login

  mac:
    runs-on: macos-11
    steps:
      - name: Install PDK and Bolt
        run: |
          brew tap puppetlabs/puppet
          brew update > /dev/null
          brew install pdk puppet-bolt

          export PATH="/opt/puppetlabs/pdk/bin:/opt/puppetlabs/bin:${PATH}"
          printf '%s\n' '/opt/puppetlabs/bin' >> $GITHUB_PATH
          printf '%s\n' '/opt/puppetlabs/pdk/bin' >> $GITHUB_PATH

          pdk --version
          bolt --version
      - name: Install 1password CLI
        run: |
          brew install 1password-cli

          op --version
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Provision test fixtures
        run: |
          pdk bundle exec rake spec_prep
      - name: Run acceptance tests
        env:
          OP_TEST_PASSWORD: '${{ secrets.OP_TEST_PASSWORD }}'
          OP_TEST_ACCOUNT: '${{ secrets.OP_TEST_ACCOUNT }}'
          OP_TEST_SECRET: '${{ secrets.OP_TEST_SECRET }}'
          OP_DEVICE: '${{ secrets.OP_DEVICE_UUID }}'
        working-directory: spec/fixtures
        run: |
          eval $(printf '%s' "${OP_TEST_PASSWORD}" |op signin my.1password.com "${OP_TEST_ACCOUNT}" "${OP_TEST_SECRET}")

          bolt plan run op_data_test::test_password
          bolt plan run op_data_test::test_login

  windows:
    runs-on: windows-2019
    steps:
      - name: Install PDK
        run: |
          choco install -y pdk

          refreshenv

          pdk --version
      - name: Install 1password CLI
        run: |
          choco install -y 1password-cli

          refreshenv

          op --version
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Provision test fixtures
        run: |
          pdk bundle exec rake spec_prep
      - name: Run acceptance tests
        env:
          OP_TEST_PASSWORD: '${{ secrets.OP_TEST_PASSWORD }}'
          OP_TEST_ACCOUNT: '${{ secrets.OP_TEST_ACCOUNT }}'
          OP_TEST_SECRET: '${{ secrets.OP_TEST_SECRET }}'
          OP_DEVICE: '${{ secrets.OP_DEVICE_UUID }}'
        working-directory: spec/fixtures
        run: |
          Invoke-Expression $(Write-Output $Env:OP_TEST_PASSWORD |op signin my.1password.com $Env:OP_TEST_ACCOUNT $Env:OP_TEST_SECRET)

          pdk bundle exec bolt plan run op_data_test::test_password
          pdk bundle exec bolt plan run op_data_test::test_login
